# python app deployment check

apiVersion: apps/v1
kind: Deployment
metadata:
  name: flaskppd
  labels:
    app: flaskappdl
spec:
  replicas: 5
  selector:
    matchLabels:
      app: flaskappdl
  template:
    metadata:
      labels:
        app: flaskappdl
    spec:
      containers:
      - name: flaskappc
        image: saigiridharr/myflaskapp
        imagePullPolicy: Always
        ports:
        -  containerPort: 5050

---

# python app service clusterIP

apiVersion: v1
kind: Service
metadata:
  name: flaskapps
spec:
  selector:
    app: flaskappdl
  ports:
  - protocol: TCP
    port: 8181
    targetPort: 5050

---

# nginx service with loadbalancer

apiVersion: v1
kind: Service
metadata:
  name: nginxs
spec:
  selector:
    app: nginxdl
  ports:
  - protocol: TCP
    port: 80
  type: LoadBalancer

---

# nginx deployment with configMaps

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginxd
  labels:
    app: nginxdl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginxdl
  template:
    metadata:
      labels:
        app: nginxdl
    spec:
      volumes:
      - name: nginx-config-volumes
        configMap:
          name: confmap
      containers:
      - name: nginxc
        image: nginx:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-config-volumes
          mountPath: /etc/nginx/conf.d

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: confmap
data:
  default.conf: |
    server {
        listen 80;
        location / {
            proxy_pass http://flaskapps:8181;
        }
    }

---
# sql deployment

apiVersion: apps/v1
kind: Deployment
metadata:
  name: flasksqld
  labels:
    app: flasksql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flasksql
  template:
    metadata:
      labels:
        app: flasksql
    spec:
      volumes:
      - name: normal-volume
        persistentVolumeClaim:
          claimName: persis-vol-caim
      containers:
      - name: flasksqlc
        image: saigiridharr/flasksql
        imagePullPolicy: Always
        ports:
        -  containerPort: 3306
        volumeMounts:
        - name: normal-volume
          mountPath: /var/lib/mysql

---

# sql service clusterIP

apiVersion: v1
kind: Service
metadata:
  name: mysql123
spec:
  selector:
    app: flasksql
  ports:
  - protocol: TCP
    port: 3306
    targetPort: 3306

